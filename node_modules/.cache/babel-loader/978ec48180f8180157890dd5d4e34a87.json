{"ast":null,"code":"import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  if (typeof options === 'string') {\n    buf = options === 'binary' ? new Uint8Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    var start = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[start + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return bytesToUuid(rnds);\n}\n\nexport default v4;","map":{"version":3,"sources":["/Users/joycesilvera/react-todo/node_modules/uuid/dist/esm-browser/v4.js"],"names":["rng","bytesToUuid","v4","options","buf","offset","Uint8Array","rnds","random","start","i"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,SAASC,EAAT,CAAYC,OAAZ,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;AAChC,MAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAC/BC,IAAAA,GAAG,GAAGD,OAAO,KAAK,QAAZ,GAAuB,IAAIG,UAAJ,CAAe,EAAf,CAAvB,GAA4C,IAAlD;AACAH,IAAAA,OAAO,GAAG,IAAV;AACD;;AAEDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAII,IAAI,GAAGJ,OAAO,CAACK,MAAR,IAAkB,CAACL,OAAO,CAACH,GAAR,IAAeA,GAAhB,GAA7B,CAPgC,CAOqB;;AAErDO,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,GAAiB,IAA3B;AACAA,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,GAAiB,IAA3B,CAVgC,CAUC;;AAEjC,MAAIH,GAAJ,EAAS;AACP,QAAIK,KAAK,GAAGJ,MAAM,IAAI,CAAtB;;AAEA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwB,EAAEA,CAA1B,EAA6B;AAC3BN,MAAAA,GAAG,CAACK,KAAK,GAAGC,CAAT,CAAH,GAAiBH,IAAI,CAACG,CAAD,CAArB;AACD;;AAED,WAAON,GAAP;AACD;;AAED,SAAOH,WAAW,CAACM,IAAD,CAAlB;AACD;;AAED,eAAeL,EAAf","sourcesContent":["import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  if (typeof options === 'string') {\n    buf = options === 'binary' ? new Uint8Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    var start = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[start + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return bytesToUuid(rnds);\n}\n\nexport default v4;"]},"metadata":{},"sourceType":"module"}