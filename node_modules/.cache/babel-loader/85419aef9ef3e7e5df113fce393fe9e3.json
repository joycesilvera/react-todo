{"ast":null,"code":"import _toConsumableArray from\"/Users/joycesilvera/react-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/joycesilvera/react-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joycesilvera/react-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/joycesilvera/react-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/joycesilvera/react-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{BrowserRouter as Router,Route}from\"react-router-dom\";//React-Router\nimport Todos from\"./components/Todos\";import Header from\"./components/layout/Header\";import AddTodo from\"./components/AddTodo\";//import { v4 as uuidv4 } from \"uuid\";\nimport\"./App.css\";import About from\"./components/pages/About\";import axios from\"axios\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={//state is an object\ntodos:[]};_this.markComplete=function(id){// console.log(id);\n_this.setState({todos:_this.state.todos.map(function(todo){if(todo.id===id){todo.completed=!todo.completed;//we do this to toggle orelse it will always remain true/false\n}return todo;})});};_this.delTodo=function(id){//console.log(id);\n// this.setState({\n//   todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n// });\n//delete from API\naxios.delete(\"https://jsonplaceholder.typicode.com/todos/${id}\").then(function(res){return _this.setState({todos:_toConsumableArray(_this.state.todos.filter(function(todo){return todo.id!==id;}))});});//     if (todo.id === id) {\n//       todo.completed = !todo.completed; //we do this to toggle orelse it will always remain true/false\n//     }\n//     return todo;\n//   }),\n// });\n};_this.addTodo=function(title){//console.log(title);\n// const newTodo = {\n//   id: 4,\n//   title,\n//   completed: false,\n// };\n// this.setState({\n//   todos: [...this.state.todos, newTodo],\n// });\n//after the POST request\naxios.post(\"https://jsonplaceholder.typicode.com/todos\",{title:title,completed:false}).then(function(res){return _this.setState({todos:[].concat(_toConsumableArray(_this.state.todos),[res.data])});});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(function(res){return _this2.setState({todos:res.data});});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\"//by adding EXACT here we get only the ABOUT page\n,render:function render(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AddTodo,{addTodo:_this3.addTodo}),/*#__PURE__*/React.createElement(Todos,{todos:_this3.state.todos,markComplete:_this3.markComplete,delTodo:_this3.delTodo}));}}),/*#__PURE__*/React.createElement(Route,{path:\"/about\",component:About}))));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/joycesilvera/react-todo/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","axios","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","delete","then","res","filter","addTodo","title","post","data","get","props"],"mappings":"iuBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,KAA+C,kBAA/C,CAAmE;AAEnE,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA;AACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,G,+SACJC,K,CAAQ,CACN;AACAC,KAAK,CAAE,EAFD,C,OAWRC,Y,CAAe,SAACC,EAAD,CAAQ,CACrB;AACA,MAAKC,QAAL,CAAc,CACZH,KAAK,CAAE,MAAKD,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAqB,SAACC,IAAD,CAAU,CACpC,GAAIA,IAAI,CAACH,EAAL,GAAYA,EAAhB,CAAoB,CAClBG,IAAI,CAACC,SAAL,CAAiB,CAACD,IAAI,CAACC,SAAvB,CAAkC;AACnC,CACD,MAAOD,CAAAA,IAAP,CACD,CALM,CADK,CAAd,EAQD,C,OAGDE,O,CAAU,SAACL,EAAD,CAAQ,CAChB;AACA;AACA;AACA;AAEA;AACAL,KAAK,CACFW,MADH,CACU,kDADV,EAEGC,IAFH,CAEQ,SAACC,GAAD,QACJ,OAAKP,QAAL,CAAc,CACZH,KAAK,oBAAM,MAAKD,KAAL,CAAWC,KAAX,CAAiBW,MAAjB,CAAwB,SAACN,IAAD,QAAUA,CAAAA,IAAI,CAACH,EAAL,GAAYA,EAAtB,EAAxB,CAAN,CADO,CAAd,CADI,EAFR,EAQA;AACA;AACA;AACA;AACA;AACA;AACD,C,OAGDU,O,CAAU,SAACC,KAAD,CAAW,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAhB,KAAK,CACFiB,IADH,CACQ,4CADR,CACsD,CAClDD,KAAK,CAALA,KADkD,CAElDP,SAAS,CAAE,KAFuC,CADtD,EAKGG,IALH,CAKQ,SAACC,GAAD,QAAS,OAAKP,QAAL,CAAc,CAAEH,KAAK,8BAAM,MAAKD,KAAL,CAAWC,KAAjB,GAAwBU,GAAG,CAACK,IAA5B,EAAP,CAAd,CAAT,EALR,EAMD,C,4FA7DmB,iBAClBlB,KAAK,CACFmB,GADH,CACO,sDADP,EAEGP,IAFH,CAEQ,SAACC,GAAD,QAAS,CAAA,MAAI,CAACP,QAAL,CAAc,CAAEH,KAAK,CAAEU,GAAG,CAACK,IAAb,CAAd,CAAT,EAFR,EAGD,C,uCA2DQ,iBACP,mBACE,oBAAC,MAAD,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eACE,oBAAC,MAAD,MADF,cAEE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,GAAI;AAFX,CAGE,MAAM,CAAE,gBAACE,KAAD,qBACN,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,OAAD,EAAS,OAAO,CAAE,MAAI,CAACL,OAAvB,EADF,cAEE,oBAAC,KAAD,EACE,KAAK,CAAE,MAAI,CAACb,KAAL,CAAWC,KADpB,CAEE,YAAY,CAAE,MAAI,CAACC,YAFrB,CAGE,OAAO,CAAE,MAAI,CAACM,OAHhB,EAFF,CADM,EAHV,EAFF,cAgBE,oBAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAEX,KAAhC,EAhBF,CADF,CADF,CADF,CAwBD,C,iBA9FeP,S,EAiGlB,cAAeS,CAAAA,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"; //React-Router\n\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    //state is an object\n    todos: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then((res) => this.setState({ todos: res.data }));\n  }\n\n  markComplete = (id) => {\n    // console.log(id);\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed; //we do this to toggle orelse it will always remain true/false\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //but after refresh we will get all items again\n  delTodo = (id) => {\n    //console.log(id);\n    // this.setState({\n    //   todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n    // });\n\n    //delete from API\n    axios\n      .delete(\"https://jsonplaceholder.typicode.com/todos/${id}\")\n      .then((res) =>\n        this.setState({\n          todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n        })\n      );\n\n    //     if (todo.id === id) {\n    //       todo.completed = !todo.completed; //we do this to toggle orelse it will always remain true/false\n    //     }\n    //     return todo;\n    //   }),\n    // });\n  };\n\n  // Add Todo\n  addTodo = (title) => {\n    //console.log(title);\n    // const newTodo = {\n    //   id: 4,\n    //   title,\n    //   completed: false,\n    // };\n    // this.setState({\n    //   todos: [...this.state.todos, newTodo],\n    // });\n\n    //after the POST request\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title,\n        completed: false,\n      })\n      .then((res) => this.setState({ todos: [...this.state.todos, res.data] }));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\" //by adding EXACT here we get only the ABOUT page\n              render={(props) => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}