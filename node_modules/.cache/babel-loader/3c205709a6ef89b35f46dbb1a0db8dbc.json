{"ast":null,"code":"var _jsxFileName = \"/Users/joycesilvera/react-todo/src/components/Todoitem.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class Todoitem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: \"#f4f4f4\",\n        padding: \"10px\",\n        borderBottom: \"1px #ccc dotted\",\n        textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n      }; // if (this.props.todo.completed) {\n      //   return {\n      //     textDecoration: \"line-through\",\n      //   };\n      // } else {\n      //   return {\n      //     textDecoration: \"none\",\n      //   };\n      // }\n    };\n\n    this.markComplete = e => {\n      //our custom method that we have created\n      console.log(this.props); //can cause error as it can't read props of undefined as the Component\n      //properties can be invoked only within the render method\n\n      this.props.todo.completed = true;\n      this.getStyle();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.getStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.markComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }), \" \", this.props.todo.title));\n  }\n\n} //we receive the values from the state to the props and them we will be able to see it as a list\n// using the above command\n//Proptypes\n\nTodoitem.protoTypes = {\n  todo: PropTypes.object.isRequired\n};\nexport default Todoitem;","map":{"version":3,"sources":["/Users/joycesilvera/react-todo/src/components/Todoitem.js"],"names":["React","Component","PropTypes","Todoitem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","markComplete","e","console","log","render","title","protoTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACtCG,QADsC,GAC3B,MAAM;AACf,aAAO;AACLC,QAAAA,UAAU,EAAE,SADP;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,YAAY,EAAE,iBAHT;AAILC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJxD,OAAP,CADe,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAjBqC;;AAAA,SAmBtCC,YAnBsC,GAmBtBC,CAAD,IAAO;AACpB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EAFoB,CAEK;AACzB;;AACA,WAAKA,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,IAA5B;AACA,WAAKP,QAAL;AACD,KAzBqC;AAAA;;AA2BtCY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE,KAAKZ,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKQ,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACyD,GADzD,EAEG,KAAKH,KAAL,CAAWC,IAAX,CAAgBO,KAFnB,CADF,CADF;AAQD;;AApCqC,C,CAqCtC;AACF;AAEA;;AACAd,QAAQ,CAACe,UAAT,GAAsB;AACpBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBC;AADH,CAAtB;AAIA,eAAejB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Todoitem extends Component {\n  getStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\",\n    };\n    // if (this.props.todo.completed) {\n    //   return {\n    //     textDecoration: \"line-through\",\n    //   };\n    // } else {\n    //   return {\n    //     textDecoration: \"none\",\n    //   };\n    // }\n  };\n\n  markComplete = (e) => {\n    //our custom method that we have created\n    console.log(this.props); //can cause error as it can't read props of undefined as the Component\n    //properties can be invoked only within the render method\n    this.props.todo.completed = true;\n    this.getStyle();\n  };\n\n  render() {\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input type=\"checkbox\" onChange={this.markComplete} />{\" \"}\n          {this.props.todo.title}\n        </p>\n      </div>\n    );\n  }\n} //we receive the values from the state to the props and them we will be able to see it as a list\n// using the above command\n\n//Proptypes\nTodoitem.protoTypes = {\n  todo: PropTypes.object.isRequired,\n};\n\nexport default Todoitem;\n"]},"metadata":{},"sourceType":"module"}