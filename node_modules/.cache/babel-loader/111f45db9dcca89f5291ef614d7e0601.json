{"ast":null,"code":"var _jsxFileName = \"/Users/joycesilvera/react-todo/src/components/Todoitem.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class Todoitem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: \"#f4f4f4\",\n        padding: \"10px\",\n        borderBottom: \"1px #ccc dotted\",\n        textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n      }; // if (this.props.todo.completed) {\n      //   return {\n      //     textDecoration: \"line-through\",\n      //   };\n      // } else {\n      //   return {\n      //     textDecoration: \"none\",\n      //   };\n      // }\n    };\n  }\n\n  //****SINCE WE ARE MOVING UP Todoitem -> Todos -> App.js SO WE WILL BE SHIFTING THE BELOW METHOD****\n  // markComplete = (e) => {\n  //   //use arrow function to bind the this to the prop\n  //   //our custom method that we have created\n  //   console.log(this.props); //can cause error as it can't read props of undefined as the Component\n  //   //properties can be invoked only within the render method\n  // };\n  render() {\n    //variable destructuring\n    const {\n      id,\n      title\n    } = this.props.todo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.getStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.markComplete.bind(this, id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), \" \", title, /*#__PURE__*/React.createElement(\"button\", {\n      style: btnStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"x\")));\n  }\n\n} //we receive the values from the state to the props and them we will be able to see it as a list\n// using the above command\n//Proptypes\n\nTodoitem.protoTypes = {\n  todo: PropTypes.object.isRequired\n};\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 2px\",\n  borderRadius: \"40%\",\n  cursor: \"pointer\",\n  float: \"right\"\n};\nexport default Todoitem;","map":{"version":3,"sources":["/Users/joycesilvera/react-todo/src/components/Todoitem.js"],"names":["React","Component","PropTypes","Todoitem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","render","id","title","markComplete","bind","btnStyle","protoTypes","object","isRequired","color","border","borderRadius","cursor","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACtCG,QADsC,GAC3B,MAAM;AACf,aAAO;AACLC,QAAAA,UAAU,EAAE,SADP;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,YAAY,EAAE,iBAHT;AAILC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJxD,OAAP,CADe,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAjBqC;AAAA;;AAmBtC;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgB,KAAKL,KAAL,CAAWC,IAAjC;AACA,wBACE;AAAK,MAAA,KAAK,EAAE,KAAKN,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWM,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCH,EAAnC,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIK,GAJL,EAKGC,KALH,eAME;AAAQ,MAAA,KAAK,EAAEG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CADF,CADF;AAYD;;AA1CqC,C,CA2CtC;AACF;AAEA;;AACAd,QAAQ,CAACe,UAAT,GAAsB;AACpBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBC;AADH,CAAtB;AAIA,MAAMH,QAAQ,GAAG;AACfZ,EAAAA,UAAU,EAAE,SADG;AAEfgB,EAAAA,KAAK,EAAE,MAFQ;AAGfC,EAAAA,MAAM,EAAE,MAHO;AAIfhB,EAAAA,OAAO,EAAE,SAJM;AAKfiB,EAAAA,YAAY,EAAE,KALC;AAMfC,EAAAA,MAAM,EAAE,SANO;AAOfC,EAAAA,KAAK,EAAE;AAPQ,CAAjB;AASA,eAAetB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Todoitem extends Component {\n  getStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\",\n    };\n    // if (this.props.todo.completed) {\n    //   return {\n    //     textDecoration: \"line-through\",\n    //   };\n    // } else {\n    //   return {\n    //     textDecoration: \"none\",\n    //   };\n    // }\n  };\n\n  //****SINCE WE ARE MOVING UP Todoitem -> Todos -> App.js SO WE WILL BE SHIFTING THE BELOW METHOD****\n  // markComplete = (e) => {\n  //   //use arrow function to bind the this to the prop\n  //   //our custom method that we have created\n  //   console.log(this.props); //can cause error as it can't read props of undefined as the Component\n  //   //properties can be invoked only within the render method\n  // };\n\n  render() {\n    //variable destructuring\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.markComplete.bind(this, id)}\n          />{\" \"}\n          {title}\n          <button style={btnStyle}>x</button>\n        </p>\n      </div>\n    );\n  }\n} //we receive the values from the state to the props and them we will be able to see it as a list\n// using the above command\n\n//Proptypes\nTodoitem.protoTypes = {\n  todo: PropTypes.object.isRequired,\n};\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 2px\",\n  borderRadius: \"40%\",\n  cursor: \"pointer\",\n  float: \"right\",\n};\nexport default Todoitem;\n"]},"metadata":{},"sourceType":"module"}