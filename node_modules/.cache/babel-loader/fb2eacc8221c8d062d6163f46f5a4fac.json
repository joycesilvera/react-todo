{"ast":null,"code":"var _jsxFileName = \"/Users/joycesilvera/react-todo/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"; //React-Router\n\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\"; //import { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //state is an object\n      todos: []\n    };\n\n    this.markComplete = id => {\n      // console.log(id);\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed; //we do this to toggle orelse it will always remain true/false\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      //console.log(id);\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      }); //     if (todo.id === id) {\n      //       todo.completed = !todo.completed; //we do this to toggle orelse it will always remain true/false\n      //     }\n      //     return todo;\n      //   }),\n      // });\n    };\n\n    this.addTodo = title => {\n      //console.log(title);\n      // const newTodo = {\n      //   id: 4,\n      //   title,\n      //   completed: false,\n      // };\n      //AFTER THE post Request\n      axios.post(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(res => console.log(res.data)); // this.setState({\n      //   todos: [...this.state.todos, newTodo],\n      //  });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(res => this.setState({\n      todos: res.data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\" //by adding EXACT here we get only the ABOUT page\n      ,\n      render: props => /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joycesilvera/react-todo/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","axios","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","addTodo","title","post","then","res","console","log","data","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"; //React-Router\n\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    //state is an object\n    todos: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then((res) => this.setState({ todos: res.data }));\n  }\n\n  markComplete = (id) => {\n    // console.log(id);\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed; //we do this to toggle orelse it will always remain true/false\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //but after refresh we will get all items again\n  delTodo = (id) => {\n    //console.log(id);\n    this.setState({\n      todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n    });\n    //     if (todo.id === id) {\n    //       todo.completed = !todo.completed; //we do this to toggle orelse it will always remain true/false\n    //     }\n    //     return todo;\n    //   }),\n    // });\n  };\n\n  // Add Todo\n  addTodo = (title) => {\n    //console.log(title);\n    // const newTodo = {\n    //   id: 4,\n    //   title,\n    //   completed: false,\n    // };\n\n    //AFTER THE post Request\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then((res) => console.log(res.data));\n    // this.setState({\n    //   todos: [...this.state.todos, newTodo],\n    //  });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\" //by adding EXACT here we get only the ABOUT page\n              render={(props) => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}